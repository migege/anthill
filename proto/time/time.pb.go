// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/migege/anthill/proto/time/time.proto

/*
Package migege_anthill_time is a generated protocol buffer package.

It is generated from these files:
	github.com/migege/anthill/proto/time/time.proto

It has these top-level messages:
	Time
*/
package migege_anthill_time

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Time struct {
	Ts    int64 `protobuf:"varint,1,opt,name=ts" json:"ts,omitempty"`
	TsUtc int64 `protobuf:"varint,2,opt,name=ts_utc,json=tsUtc" json:"ts_utc,omitempty"`
}

func (m *Time) Reset()                    { *m = Time{} }
func (m *Time) String() string            { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()               {}
func (*Time) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Time) GetTs() int64 {
	if m != nil {
		return m.Ts
	}
	return 0
}

func (m *Time) GetTsUtc() int64 {
	if m != nil {
		return m.TsUtc
	}
	return 0
}

func init() {
	proto.RegisterType((*Time)(nil), "migege.anthill.time.Time")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for TimeService service

type TimeServiceClient interface {
	Now(ctx context.Context, in *Time, opts ...client.CallOption) (*Time, error)
}

type timeServiceClient struct {
	c           client.Client
	serviceName string
}

func NewTimeServiceClient(serviceName string, c client.Client) TimeServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "migege.anthill.time"
	}
	return &timeServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *timeServiceClient) Now(ctx context.Context, in *Time, opts ...client.CallOption) (*Time, error) {
	req := c.c.NewRequest(c.serviceName, "TimeService.Now", in)
	out := new(Time)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TimeService service

type TimeServiceHandler interface {
	Now(context.Context, *Time, *Time) error
}

func RegisterTimeServiceHandler(s server.Server, hdlr TimeServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&TimeService{hdlr}, opts...))
}

type TimeService struct {
	TimeServiceHandler
}

func (h *TimeService) Now(ctx context.Context, in *Time, out *Time) error {
	return h.TimeServiceHandler.Now(ctx, in, out)
}

func init() { proto.RegisterFile("github.com/migege/anthill/proto/time/time.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 159 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x4f, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0xcd, 0x4c, 0x4f, 0x4d, 0x4f, 0xd5, 0x4f, 0xcc,
	0x2b, 0xc9, 0xc8, 0xcc, 0xc9, 0xd1, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0xc9, 0xcc, 0x4d,
	0x05, 0x13, 0x7a, 0x60, 0xbe, 0x90, 0x30, 0x44, 0x95, 0x1e, 0x54, 0x95, 0x1e, 0x48, 0x4a, 0x49,
	0x97, 0x8b, 0x25, 0x24, 0x33, 0x37, 0x55, 0x88, 0x8f, 0x8b, 0xa9, 0xa4, 0x58, 0x82, 0x51, 0x81,
	0x51, 0x83, 0x39, 0x88, 0xa9, 0xa4, 0x58, 0x48, 0x94, 0x8b, 0xad, 0xa4, 0x38, 0xbe, 0xb4, 0x24,
	0x59, 0x82, 0x09, 0x2c, 0xc6, 0x5a, 0x52, 0x1c, 0x5a, 0x92, 0x6c, 0xe4, 0xc3, 0xc5, 0x0d, 0x52,
	0x1e, 0x9c, 0x5a, 0x54, 0x96, 0x99, 0x9c, 0x2a, 0x64, 0xcb, 0xc5, 0xec, 0x97, 0x5f, 0x2e, 0x24,
	0xa9, 0x87, 0xc5, 0x68, 0x3d, 0x90, 0x42, 0x29, 0xdc, 0x52, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x87,
	0x19, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x50, 0x98, 0x66, 0x59, 0xcb, 0x00, 0x00, 0x00,
}
